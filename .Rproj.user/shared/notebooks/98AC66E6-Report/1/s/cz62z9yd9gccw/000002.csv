"0","alltest.result=alltest.raw %>% "
"0","  mutate(program = case_when("
"0","                    program  == ""./boids_gpu"" ~ ""GPU"",  "
"0","                    program  == ""./boids_mc"" ~ ""Multicore"",  "
"0","                    program  == ""./boids_omp_pgcc"" ~ ""Open MP"","
"0","                    program  == ""./boids_seq_pgcc"" ~ ""Sequential"")) %>% "
"0","  mutate(duration = as.numeric(duration),"
"0","          program = fct_relevel(program, c('Sequential', 'Open MP',""Multicore"", ""GPU""))) %>% "
"0","  group_by(program, problem_size) %>% "
"0","  summarize(duration = median(duration))"
"1","[38;5;232m`summarise()` has grouped output by 'program'. You can override using the `.groups` argument.[39m
"
"0","xx = c(100,200,400,800,1600,3200,6400,12800,25600,51200)"
"0","gpu.data = alltest.result %>% filter(program== 'GPU', !is.na(duration)) "
"0","gpu.spline = splinefun(gpu.data$problem_size, gpu.data$duration, method=""fmm"")(xx)"
"0",""
"0","omp.data = alltest.result %>% filter(program== 'Open MP', !is.na(duration)) "
"0","omp.spline = splinefun(omp.data$problem_size,omp.data$duration,  method=""fmm"")(xx)"
"0",""
"0","seq.data = alltest.result %>% filter(program== 'Sequential', !is.na(duration)) "
"0","seq.spline = splinefun(seq.data$problem_size,seq.data$duration, method=""fmm"")(xx)"
"0",""
"0","mc.data = alltest.result %>% filter(program== 'Multicore', !is.na(duration)) "
"0","mc.spline = splinefun(mc.data$problem_size,mc.data$duration,method=""fmm"")(xx)"
"0",""
"0","prediction = data.frame(problem_size = xx,"
"0","           omp = omp.spline,"
"0","           mc = mc.spline,"
"0","           seq = seq.spline,"
"0","           gpu = gpu.spline) %>%  "
"0","          pivot_longer(cols = -c(problem_size), "
"0","                       values_to = 'pred',  "
"0","                       names_to = 'program') %>%"
"0","          mutate(program = case_when("
"0","                    program  == ""gpu"" ~ ""GPU"",  "
"0","                    program  == ""mc"" ~ ""Multicore"",  "
"0","                    program  == ""omp"" ~ ""Open MP"",  "
"0","                    program  == ""seq"" ~ ""Sequential"")) %>% "
"0","          inner_join(alltest.result) %>% "
"0","          mutate(program = factor(program, levels = c(""Sequential"",""Open MP"", ""Multicore"", ""GPU"")))"
"1","[38;5;232mJoining, by = c(""problem_size"", ""program"")[39m
"
"0","  "
